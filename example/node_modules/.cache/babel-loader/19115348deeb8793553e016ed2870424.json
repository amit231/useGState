{"ast":null,"code":"var _jsxFileName = \"/home/amit/Frontend/usegstate/example/src/App.tsx\";\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport 'usegstate/dist/index.css';\nconst StoreContext = React.createContext({});\nconst GStateContextProvider = StoreContext.Provider;\nconst useGState = gState => {\n  const {\n    get,\n    set,\n    subscribe,\n    unsubscribe\n  } = useContext(StoreContext);\n  const [state, setState] = useState(get === null || get === void 0 ? void 0 : get(gState.key));\n  const setter = useCallback(val => {\n    set === null || set === void 0 ? void 0 : set(gState.key, val);\n    console.log(`val: `, val);\n  }, []);\n  useEffect(() => {\n    // set?.(gState.key,gState.value);\n    const subscriber = () => {\n      // console.log(`get?.(gState.key): `,get?.(gState.key));\n      const updatedState = get === null || get === void 0 ? void 0 : get(gState.key);\n      setState(updatedState);\n    };\n    subscribe === null || subscribe === void 0 ? void 0 : subscribe(subscriber);\n    return () => {\n      unsubscribe === null || unsubscribe === void 0 ? void 0 : unsubscribe(subscriber);\n    };\n  }, []);\n  return [state, setter];\n};\nlet stateCount = 0;\nconst gState = value => {\n  const key = `gState#${++stateCount}`;\n  return {\n    key,\n    value\n  };\n};\nconst ipState = gState('');\nconst premetiveTypes = ['number', 'string', 'bigInt', 'boolean'];\nexport const GStateProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const store = React.useRef({});\n  const get = React.useCallback(a => {\n    return store.current[a];\n  }, []);\n  const set = React.useCallback((a, val) => {\n    if (premetiveTypes.includes(typeof val)) {\n      store.current[a] = val;\n    } else {\n      store.current[a] = {\n        ...store.current[a],\n        ...val\n      };\n    }\n    subs.current.forEach(sub => sub());\n  }, []);\n  const subs = React.useRef(new Set());\n  const subscribe = React.useCallback(fn => {\n    subs.current.add(fn);\n  }, []);\n  const unsubscribe = React.useCallback(fn => {\n    subs.current.delete(fn);\n  }, []);\n  return /*#__PURE__*/React.createElement(GStateContextProvider, {\n    value: {\n      get,\n      set,\n      subscribe,\n      unsubscribe\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }, children);\n};\nconst App = () => {\n  return /*#__PURE__*/React.createElement(GStateProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Client, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }));\n};\nexport default App;\nconst Client = () => {\n  const [getter, setter] = useGState(ipState);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: getter,\n    onChange: e => {\n      setter(e.target.value);\n    },\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useState","StoreContext","createContext","GStateContextProvider","Provider","useGState","gState","get","set","subscribe","unsubscribe","state","setState","key","setter","val","console","log","subscriber","updatedState","stateCount","value","ipState","premetiveTypes","GStateProvider","children","store","useRef","a","current","includes","subs","forEach","sub","Set","fn","add","delete","App","Client","getter","e","target"],"sources":["/home/amit/Frontend/usegstate/example/src/App.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useContext,\n  useEffect,\n  useState\n} from 'react'\n\nimport 'usegstate/dist/index.css'\n\nconst StoreContext = React.createContext<\n  Partial<{\n    get: (a: string) => any\n    set: (a: string, v: object) => void\n    subscribe: (fn: () => void) => void\n    unsubscribe: (fn: () => void) => void\n  }>\n>({})\n\nconst GStateContextProvider = StoreContext.Provider\ninterface IgState {\n  key: string\n  value: any\n}\n\nconst useGState = (gState: IgState) => {\n  const { get, set, subscribe, unsubscribe } = useContext(StoreContext)\n  const [state, setState] = useState(get?.(gState.key))\n  const setter = useCallback((val) => {\n    set?.(gState.key, val)\n    console.log(`val: `,val);\n  }, [])\n\n  useEffect(() => {\n    // set?.(gState.key,gState.value);\n    const subscriber = () => {\n      // console.log(`get?.(gState.key): `,get?.(gState.key));\n      const updatedState = get?.(gState.key)\n\n      setState(updatedState)\n    }\n    subscribe?.(subscriber)\n    return () => {\n      unsubscribe?.(subscriber)\n    }\n  }, [])\n\n  return [state, setter]\n}\n\nlet stateCount = 0\nconst gState = (value: any): IgState => {\n  const key = `gState#${++stateCount}`\n  return { key, value }\n}\n\nconst ipState = gState('')\nconst premetiveTypes = ['number','string','bigInt','boolean']\nexport const GStateProvider = ({ children }: { children: JSX.Element }) => {\n  const store = React.useRef({})\n  const get = React.useCallback((a: string) => {\n    return store.current[a]\n  }, [])\n  const set = React.useCallback((a: string, val: any) => {\n    if(premetiveTypes.includes(typeof val)){\n      store.current[a] = val;\n    } else{\n      store.current[a] = { ...store.current[a], ...val }\n    }\n    subs.current.forEach(sub=>sub());\n  }, [])\n  const subs = React.useRef(new Set<() => void>())\n  const subscribe = React.useCallback((fn: () => void) => {\n    subs.current.add(fn)\n  }, [])\n  const unsubscribe = React.useCallback((fn: () => void) => {\n    subs.current.delete(fn)\n  }, [])\n  return (\n    <GStateContextProvider value={{ get, set, subscribe, unsubscribe }}>\n      {children}\n    </GStateContextProvider>\n  )\n}\n\nconst App = () => {\n  return (\n    <GStateProvider>\n      <Client />\n    </GStateProvider>\n  )\n}\n\nexport default App\nconst Client = () => {\n  const [getter, setter] = useGState(ipState)\n  return (\n    <div>\n      <input\n        value={getter}\n        onChange={(e) => {\n          setter(e.target.value)\n        }}\n        autoFocus={true}\n      ></input>\n    </div>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}